version: "3.8"

services:
  app:
    build: .
    ports:
      - "${API_PORT}:8080"
    depends_on:
      - db
    environment:
      - DB_DRIVER=${DB_DRIVER}
      - DB_HOST=db
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE_NAME=${DB_DATABASE_NAME}
      - DB_PORT=${DB_PORT}
      - CRYPTO_SECRET_KEY=${CRYPTO_SECRET_KEY}
      - API_PORT=${API_PORT}
      - LOGLEVEL=${LOGLEVEL}
    restart: always
    networks:
      - ${DOCKER_APP_NETWORK}

  db:
    image: mysql:latest
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE_NAME}
    volumes:
      - ./src/v1/infrastructure/docker/db_volume:/var/lib/mysql
      - ./src/v1/infrastructure/docker/scripts/:/docker-entrypoint-initdb.d/
    ports:
      - "${DB_PORT}:${DB_PORT}"  # Binding the MySQL port to the host using the env variable
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - ${DOCKER_APP_NETWORK}

networks:
  my_app_network:
    driver: bridge

  # db: 
  #   image: postgres:latest
  #   environment:
  #     - POSTGRES_USERNAME=postgres
  #     - POSTGRES_PASSWORD=mysecretpassword
  #     - POSTGRES_DATABASE_NAME=mydbuser
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./src/v1/infrastructure/docker/scripts:/tmp
  #     - ./src/v1/infrastructure/docker/db_storage/:/var/lib/postgresql/data
  #     - ./src/v1/infrastructure/docker/data/:/docker-entrypoint-initdb.d/
  #   restart: always
  